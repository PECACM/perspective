{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport default function useWindowDimensions() {\n  _s();\n\n  const hasWindow = typeof window !== \"undefined\";\n\n  function getWindowDimensions() {\n    const width = hasWindow ? window.innerWidth : null;\n    const height = hasWindow ? window.innerHeight : null;\n    return {\n      width,\n      height\n    };\n  }\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  useEffect(() => {\n    if (hasWindow) {\n      function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n      }\n\n      window.addEventListener(\"resize\", handleResize);\n      return () => window.removeEventListener(\"resize\", handleResize);\n    } // eslint-disable-next-line\n\n  }, [hasWindow]);\n  return windowDimensions;\n}\n\n_s(useWindowDimensions, \"XalQq70mIWrnM+6Jr3XornfayDc=\");","map":{"version":3,"sources":["/Users/syuser/Personal/Work/web/Perspective/perspective/src/components/carousel/windowHook.js"],"names":["useState","useEffect","useWindowDimensions","hasWindow","window","getWindowDimensions","width","innerWidth","height","innerHeight","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAC5C,QAAMC,SAAS,GAAG,OAAOC,MAAP,KAAkB,WAApC;;AAEA,WAASC,mBAAT,GAA+B;AAC7B,UAAMC,KAAK,GAAGH,SAAS,GAAGC,MAAM,CAACG,UAAV,GAAuB,IAA9C;AACA,UAAMC,MAAM,GAAGL,SAAS,GAAGC,MAAM,CAACK,WAAV,GAAwB,IAAhD;AACA,WAAO;AACLH,MAAAA,KADK;AAELE,MAAAA;AAFK,KAAP;AAID;;AAED,QAAM,CAACE,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CACtDK,mBAAmB,EADmC,CAAxD;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,SAAJ,EAAe;AACb,eAASS,YAAT,GAAwB;AACtBD,QAAAA,mBAAmB,CAACN,mBAAmB,EAApB,CAAnB;AACD;;AAEDD,MAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,aAAO,MAAMR,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACD,KARa,CAShB;;AACC,GAVQ,EAUN,CAACT,SAAD,CAVM,CAAT;AAYA,SAAOO,gBAAP;AACD;;GA7BuBR,mB","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport default function useWindowDimensions() {\n  const hasWindow = typeof window !== \"undefined\";\n\n  function getWindowDimensions() {\n    const width = hasWindow ? window.innerWidth : null;\n    const height = hasWindow ? window.innerHeight : null;\n    return {\n      width,\n      height,\n    };\n  }\n\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    if (hasWindow) {\n      function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n      }\n\n      window.addEventListener(\"resize\", handleResize);\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }\n  // eslint-disable-next-line\n  }, [hasWindow]);\n\n  return windowDimensions;\n}\n"]},"metadata":{},"sourceType":"module"}